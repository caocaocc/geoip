name: Release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag version you want to build"
  schedule:
    - cron: "0 8 12 * *"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22
      - name: Build geoip
        id: build
        run: go run -v .
        env:
          FIXED_RELEASE: ${{ github.event.inputs.tag }}
      - name: Install sing-box
        run: |
          set -e -o pipefail
          ARCH_RAW=$(uname -m)
          case "${ARCH_RAW}" in
            'x86_64') ARCH='amd64';;
            'x86' | 'i686' | 'i386') ARCH='386';;
            'aarch64' | 'arm64') ARCH='arm64';;
            'armv7l') ARCH='armv7';;
            's390x') ARCH='s390x';;
            *) echo "Unsupported architecture: ${ARCH_RAW}"; exit 1;;
          esac
          VERSION=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases/latest \
            | grep tag_name \
            | cut -d ":" -f2 \
            | sed 's/\"//g;s/\,//g;s/\ //g;s/v//')
          curl -Lo sing-box.deb "https://github.com/SagerNet/sing-box/releases/download/v${VERSION}/sing-box_${VERSION}_linux_${ARCH}.deb"
          sudo dpkg -i sing-box.deb
          rm sing-box.deb

      - name: Install mihomo
        run: |
          set -e -o pipefail
          ARCH_RAW=$(uname -m)
          case "${ARCH_RAW}" in
            'x86_64') ARCH='amd64';;
            'x86' | 'i686' | 'i386') ARCH='386';;
            'aarch64' | 'arm64') ARCH='arm64';;
            'armv7l') ARCH='armv7';;
            's390x') ARCH='s390x';;
            *) echo "Unsupported architecture: ${ARCH_RAW}"; exit 1;;
          esac
          VERSION=$(curl -s https://api.github.com/repos/MetaCubeX/mihomo/releases/latest \
            | grep tag_name \
            | cut -d ":" -f2 \
            | sed 's/\"//g;s/\,//g;s/\ //g;s/v//')
          curl -Lo mihomo.deb "https://github.com/MetaCubeX/mihomo/releases/download/v${VERSION}/mihomo-linux-${ARCH}-v${VERSION}.deb"
          sudo dpkg -i mihomo.deb
          rm mihomo.deb

      - name: SRS to JSON
        run: |
          SOURCE_DIR="/home/runner/work/geoip/geoip"
          SRS_SUFFIX=".srs"
          JSON_SUFFIX=".json"
          find "$SOURCE_DIR" -type f -name "*${SRS_SUFFIX}" | while read -r SRS_FILE; do
            JSON_FILE="${SRS_FILE%$SRS_SUFFIX}$JSON_SUFFIX"
            if sing-box rule-set decompile "$SRS_FILE" -o "$JSON_FILE"; then
              echo "Converted: $SRS_FILE -> $JSON_FILE"
            else
              echo "Error converting $SRS_FILE" >&2
            fi
          done
          echo "Batch conversion complete."

      - name: TXT to MRS
        run: |
          SOURCE_DIR="/home/runner/work/geoip/geoip"
          TXT_SUFFIX=".txt"
          MRS_SUFFIX=".mrs"
          find "$SOURCE_DIR" -type f -name "*${TXT_SUFFIX}" | while read -r TXT_FILE; do
            MRS_FILE="${TXT_FILE%$TXT_SUFFIX}$MRS_SUFFIX"
            if mihomo convert-ruleset ipcidr text "$TXT_FILE" "$MRS_FILE"; then
              echo "Converted: $TXT_FILE -> $MRS_FILE"
            else
              echo "Error converting $TXT_FILE" >&2
            fi
          done
          echo "Batch conversion complete."
      - name: Release rule sets
        if: steps.build.outputs.skip != 'true'
        run: .github/release-rule-set.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate sha256 hash
        if: steps.build.outputs.skip != 'true'
        run: |
          sha256sum geoip.db > geoip.db.sha256sum
          sha256sum geoip-cn.db > geoip-cn.db.sha256sum
      - name: Release release branch
        if: steps.build.outputs.skip != 'true'
        run: .github/release-branch.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release geoip
        if: steps.build.outputs.skip != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.build.outputs.tag }}
          files: |
            geoip.db
            geoip.db.sha256sum
            geoip-cn.db
            geoip-cn.db.sha256sum
